name: Publish new version

on:
  release:
    types: [ published ]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          node-version: 16
      - name: Read package.json
        id: package-version
        uses: tyankatsu0105/read-package-version-actions@v1
        with:
          path: './'
      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ steps.package-version.outputs.version }}
          release_name: ${{ steps.package-version.outputs.version }}
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.package-version.outputs.version }}

  build-mac:
    runs-on: macos-latest
    needs: release
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          node-version: 16
      - name: Build
        uses: actions/setup-node@master
      - run: |
          npm cache clear --force
          npm install yarn --legacy-peer-deps
          yarn add ajv-formats
          yarn install
          yarn run release
      - name: Upload Release Asset For dmg
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./release/dbm-${{ needs.release.outputs.version }}-mac-x64.dmg
          asset_name: dbm-${{ needs.release.outputs.version }}-mac-x64.dmg
          asset_content_type: application/x-tg
      - name: Upload Release Asset For zip
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./release/dbm-${{ needs.release.outputs.version }}-mac-x64.zip
          asset_name: dbm-${{ needs.release.outputs.version }}-mac-x64.zip
          asset_content_type: application/zip
      - name: Upload Release Asset For yml
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./release/latest-mac.yml
          asset_name: latest-mac-inter.yml
          asset_content_type: application/x-yaml

  build-win:
    runs-on: windows-latest
    needs: release
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Build
        uses: actions/setup-node@master
        with:
          node-version: 16
      - run: |
          npm cache clear --force
          npm install yarn --legacy-peer-deps
          yarn add ajv-formats
          yarn install
          yarn run release
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./release/dbm-${{ needs.release.outputs.version }}-windows-x64-nsis-installer.exe
          asset_name: dbm-${{ needs.release.outputs.version }}-windows-x64-nsis-installer.exe
          asset_content_type: application/octet-stream
